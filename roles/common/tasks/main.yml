---
# Java tasks first

# Full URLs can be found here https://ivan-site.com/2012/05/download-oracle-java-jre-jdk-using-a-script/
- name: Download Java
  shell: 'wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com"
    "http://download.oracle.com/otn-pub/java/jdk/{{ java_version }}-{{ java_build }}/{{ jdk_or_jre }}-{{ java_version }}-linux-x{{ ansible_userspace_bits }}.tar.gz"
    -O /tmp/{{ jdk_or_jre }}_{{ java_version }}.tar.gz creates=/tmp/{{ jdk_or_jre }}_{{ java_version }}.tar.gz'
  register: jdk_downloaded
  when: openjdk|bool
  tags:
    - java

- name: Extract java
  shell: tar xzf /tmp/{{ jdk_or_jre }}_{{ java_version }}.tar.gz -C /opt/
  when: jdk_downloaded|changed
  tags:
    - java

# Not necessary but sometimes nice to have
- name: Create java symlink
  file: path=/opt/java state=link src={{ java_home }}
  when: jdk_downloaded|changed
  tags:
    - java

- name: Delete temporary java files
  file: path=/tmp/{{ jdk_or_jre }}_{{ java_version }}.tar.gz state=absent
  ignore_errors: yes
  tags:
    - java

- name: Setup Java (EL)
  shell: /usr/sbin/alternatives --install /usr/bin/java java /opt/{{ jdk_or_jre }}1.{{ java_version|replace('u','.0_') }}/bin/java 5
  when: jdk_downloaded|changed
  tags:
    - java

- name: Configure java (EL)
  shell: /usr/sbin/alternatives --set java {{ java_home }}/bin/java
  when:  jdk_downloaded|changed and ansible_os_family == 'RedHat'
  tags:
    - java

- name: Setup java (Debian)
  shell: /usr/sbin/update-alternatives --set java {{ java_home }}/bin/java
  when: jdk_downloaded|changed and ansible_os_family == 'Debian'
  tags:
    - java

- name: Install openjdk (EL)
  yum: name=java-1.{{ java_version|replace('u','.') }}-openjdk state=present
  when: openjdk|bool and ansible_os_family == 'RedHat'
  tags:
    - java

- name: Install openjdk (Debian)
  yum: name=java-1.{{ java_version|replace('u','.') }}-openjdk state=present
  when: openjdk|bool and ansible_os_family == 'Debian'
  tags:
    - java

# tasks file for tomcat

- name: Create tomcat group
  group: name=tomcat state=present
  tags:
    - tomcat

- name: Create tomcat user
  user: name=tomcat home={{ tomcat_user_home }} uid={{ tomcat_uid }} shell=/bin/sh group=tomcat state=present
  tags:
    - tomcat

- name: Download tomcat
  shell: 'wget http://apache.mirrors.pair.com/tomcat/tomcat-{{ tomcat_version|first() }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz
    -O /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz creates=/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz'
  register: tomcat_downloaded
  tags:
    - tomcat

- name: Extract tomcat
  shell: tar xzf /tmp/apache-tomcat-{{ tomcat_version }}.tar.gz -C /opt/
  when: tomcat_downloaded|changed == True
  tags:
    - tomcat

- name: Create tomcat symlink
  file: path=/opt/tomcat state=link src=/opt/apache-tomcat-{{ tomcat_version }}
  when: tomcat_downloaded|changed == True
  tags:
    - tomcat

- name: Delete temporary tomcat file
  file: path=/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz state=absent
  ignore_errors: yes
  tags:
    - tomcat

- name: Set tomcat file permissions
  file: path=/opt/apache-tomcat-{{ tomcat_version }} owner={{ tomcat_user }} recurse=yes
  tags:
    - tomcat

- name: Configure Tomcat server
  template: src=server.xml dest={{ catalina_home }}/conf/
  notify: restart tomcat
  tags:
    - tomcat

- name: Configure Tomcat users
  template: src=tomcat-users.xml dest={{ catalina_home }}/conf/
  notify: restart tomcat
  tags:
    - tomcat

- name: Create tomcat init script
  template: src=tomcat.sh dest=/etc/init.d/tomcat owner=root group=root mode=0766
  when: ansible_os_family == 'RedHat'
  tags:
    - tomcat

- name: deploy iptables rules
  template: src=iptables-save dest=/etc/sysconfig/iptables
  notify: restart iptables
  when: ansible_os_family == 'RedHat'
  tags:
    - tomcat
    
- name: wait for tomcat to start
  wait_for: port={{ http_port }}